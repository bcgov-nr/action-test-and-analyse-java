name: Unit Test and Analysis with SonarCloud
description: Run unit tests (current node only), can send to SonarCloud
branding:
  icon: check-square
  color: blue

inputs:
  ### Required
  commands:
    description: Commands to run unit tests, start with '|' for multi-line
    required: true
  dir:
    description: App/package directory
    required: true

  ### Typical / recommended
  java-cache:
    description: Java package manager cache, defaults to maven
    default: maven
  java-distribution:
    description: Java distribution, defaults to temurin
    default: temurin
  java-version:
    description: Java version, defaults to 17 (LTS)
    default: "17"
  sonar_args:
    # https://docs.sonarcloud.io/advanced-setup/analysis-parameters/
    description: SonarCloud command line arguments
    default: >
      -Dsonar.organization=bcgov-sonarcloud
      -Dsonar.projectKey=bcgov_${{ github.repository }}
  sonar_project_token:
    description: Sonar token, provide unpopulated token for pre-setup (will skip)

  ### Usually a bad idea / not recommended
  repository:
    description: Non-default repository to clone
    default: ${{ github.repository }}

runs:
  using: composite
  steps:
    # Shallow clone is faster, but SonarCloud requires a full clone
    - uses: actions/checkout@v3
      if: (! inputs.sonar_project_token)
      with:
        repository: ${{ inputs.repository }}

    # Shallow clone is faster, but can't be used with SonarCloud
    - uses: actions/checkout@v3
      if: inputs.sonar_project_token
      with:
        # Disable shallow clone for SonarCloud analysis
        fetch-depth: 0
        repository: ${{ inputs.repository }}

    # Setup node and cache dir
    - uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}

    # Run tests, hopefully generating coverage for SonarCloud
    - shell: bash
      run: |
        # Run tests
        cd ${{ inputs.dir }}
        ${{ inputs.commands }}

    ### Optional SonarCloud

    # Using sonar_project_token and cache=maven
    - if: inputs.sonar_project_token && inputs.java-cache == 'maven'
      env:
        SONAR_TOKEN: ${{ inputs.sonar_project_token }}
      shell: bash
      run: |
        # Run SonarCloud for ${{ inputs.java-cache }}
        cd ${{ inputs.dir }}
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=https://sonarcloud.io ${{ inputs.sonar_args }}

    # Using sonar_project_token and cache=gradle
    - if: inputs.sonar_project_token && inputs.java-cache == 'gradle'
      env:
        SONAR_TOKEN: ${{ inputs.sonar_project_token }}
      shell: bash
      run: |
        # Run SonarCloud for ${{ inputs.java-cache }}
        cd ${{ inputs.dir }}
        ./gradlew build sonarqube --info \
          -Dsonar.host.url=https://sonarcloud.io ${{ inputs.sonar_args }}

    ### Cleanup

    # Fix - Docker takes ownership of files, causing a cleanup fail
    - shell: bash
      id: get_uid
      run: |
        actions_user_id=`id -u $USER`
        echo $actions_user_id
        echo ::set-output name=uid::$actions_user_id
    - uses: peter-murray/reset-workspace-ownership-action@v1
      with:
        user_id: ${{ steps.get_uid.outputs.uid }}

    # Fix - Clone for action.yml and other verifications
    - name: Checkout Action repo to pass tests
      uses: actions/checkout@v3
